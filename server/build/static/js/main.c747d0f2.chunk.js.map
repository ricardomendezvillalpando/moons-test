{"version":3,"sources":["components/Header/Header.module.css","components/Main/Main.module.css","components/Landing/Landing.module.css","components/Dashboard/Dashboard.module.css","impresions.svg","visits.svg","revenue.svg","components/ChatDetail/ChatDetail.module.css","moons.svg","components/Landing/Landing.js","components/Dashboard/Dashboard.js","components/ChatDetail/ChatDetail.js","components/Main/Main.js","components/Header/Header.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","Landing","Container","className","styles","Row","Col","xs","md","lg","options","animationData","animation","defaultProps","radial","series","chart","toolbar","show","height","type","plotOptions","radialBar","startAngle","endAngle","hollow","margin","size","revenue","track","background","dataLabels","name","offsetY","color","fontSize","value","formatter","val","fill","colors","opacity","stroke","lineCap","labels","radial2","impresions","radial3","visits","Dashboard","Chat","Card","Body","Text","class","randomUserNumber","Math","random","toString","substring","randomColor","floor","textInput","React","createRef","username","socket","io","ChatDetail","useState","setName","root","message","state","setState","open","setOpen","typing","setTyping","setChosenEmoji","on","data","objName","map","conv","oldName","user","console","log","Button","onClick","aria-controls","aria-expanded","Collapse","in","placeholder","ref","current","emit","index","key","round","style","titleColor","fromNow","date","Form","autoComplete","inline","width","Label","htmlFor","srOnly","Control","id","onKeyPress","event","Dropdown","Toggle","Menu","Item","href","onEmojiClick","emojiObject","emoji","msg","Main","exact","path","component","Header","Navbar","fixed","bg","expand","Brand","src","moons","alt","Nav","Link","App","forceScroll","justify","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c747d0f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"navbar-nav\":\"Header_navbar-nav__3Gl5W\",\"nav-link\":\"Header_nav-link__pB9ol\",\"link\":\"Header_link__2wI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__CYWXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Landing\":\"Landing_Landing__3WE0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__jFBog\"};","module.exports = __webpack_public_path__ + \"static/media/impresions.b9f8ee50.svg\";","module.exports = __webpack_public_path__ + \"static/media/visits.0da788a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/revenue.e39f133a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatDetail\":\"ChatDetail_ChatDetail__2aUwi\"};","module.exports = __webpack_public_path__ + \"static/media/moons.e292d61b.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Landing.module.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Lottie from 'lottie-react-web'\nimport animation from '../../welcome.json';\n\nconst Landing = () => (\n  \n    <Container className={styles.Landing}>    \n    <Row>\n    \n      <Col>\n      <h1>About Test</h1> \n      <p>This App contains the followin three routes (components):</p>\n      <ol>\n        <li>/ (Landing component)</li>\n        <li>/chat (Chat component)</li>\n        <li>/dashboard (Dashboard component)</li>\n      </ol>\n      <h3>Client Side:</h3>  \n        <ul>\n            <li>React</li>\n        </ul>\n        <h3>\n          Server Side:\n        </h3> \n        <ul>\n            <li>NodeJs</li>\n            <li>Express</li>\n            <li>Socket IO (Real time communication) </li>\n        </ul>\n\n        <h5>\n          Version Control:\n        </h5> \n        <ul>\n            <li>Git</li>            \n        </ul>\n\n        <h5>\n          Infrastructure:\n        </h5> \n        <ul>\n            <li>Heroku</li>            \n        </ul>\n      </Col>\n      <Col xs={12} md={6} lg={6}>\n      <Lottie\n        \n          options={{\n            animationData: animation,\n            \n          }}\n        />\n      </Col>\n      \n    </Row>\n    <Row>\n      \n      \n      \n    </Row>    \n    <Row>\n      \n      <Col>\n                         \n        \n     \n      </Col>\n    </Row>\n</Container>  \n);\n\nLanding.propTypes = {};\n\nLanding.defaultProps = {};\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col,Card,Button } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport Chart from \"react-apexcharts\";\nimport impresions from '../../impresions.svg';\nimport visits from '../../visits.svg';\nimport revenue from '../../revenue.svg';\n\nlet radial = {     \n  series: [90],\n  options: {\n    chart: {      \n      toolbar: {\n        show: false  \n      },\n      height: 350,\n      type: 'radialBar'      \n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 225,\n         hollow: {\n          margin: 0,          \n          size: '85%',          \n          margin: 15,\n          image: revenue,\n          imageWidth: 260,\n          imageHeight: 2150,\n          //imageOffsetY:50,\n          imageClipped: false,\n          position: 'back'\n        },\n        track: {\n          background: '#456729',          \n          margin: 0, // margin is in pixels\n          \n        },\n    \n        dataLabels: {\n          show: true,\n          name: {\n            offsetY: -20,\n            show: true,\n            color: '#929292',\n            fontSize: '22px'\n          },\n          value: {\n            formatter: function(val) {\n              return \"$ 124,000.00 MXN\";\n            },\n            color: '#111',\n            fontSize: '30px',\n            show: true,\n            offsetY: -1\n          }\n        }\n      }\n    },\n    fill: {\n      colors: ['#8AD046'],\n      opacity: 0.9,\n      type: 'solid'},\n    stroke: {\n      lineCap: 'round'\n    },\n    labels: ['REVENUE'],\n  }\n};\n\nlet radial2 = {     \n  series: [60],\n  options: {\n    chart: {\n      toolbar: {\n        show: false  \n      },\n      height: 350,\n      type: 'radialBar'      \n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 225,\n        hollow: {\n          margin: 0,\n          //background:'#8AD046',\n          size: '85%',          \n          margin: 15,\n          image: impresions,\n          imageWidth: 260,\n          imageHeight: 2150,\n          //imageOffsetY:50,\n          imageClipped: false,\n          position: 'back'\n        },\n        track: {\n          background: '#29505E',          \n          margin: 0, // margin is in pixels\n          \n        },\n    \n        dataLabels: {\n          show: true,\n          name: {\n            offsetY: -20,\n            show: true,\n            color: '#929292',\n            fontSize: '22px'\n          },\n          value: {\n            formatter: function(val) {\n              return \"4576\";\n            },\n            color: '#111',\n            fontSize: '48px',\n            show: true,\n            offsetY: 6\n          }\n        }\n      }\n    },\n    fill: {\n      colors: ['#76C6DB'],\n      opacity: 0.9,\n      type: 'solid'},\n    stroke: {\n      lineCap: 'round'\n    },\n    labels: ['IMPRESIONS'],\n  }\n};\n\nlet radial3 = {     \n  series: [30],\n  options: {\n    chart: {\n      toolbar: {\n        show: false  \n      },\n      height: 350,\n      type: 'radialBar'      \n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 225,\n        hollow: {\n          margin: 0,\n          //background:'#8AD046',\n          size: '85%',          \n          margin: 15,\n          image: visits,\n          imageWidth: 260,\n          imageHeight: 2150,\n          //imageOffsetY:50,\n          imageClipped: false,\n          position: 'back'\n        },\n        track: {\n          background: '#EBC42F',          \n          margin: 0, // margin is in pixels\n          \n        },\n    \n        dataLabels: {\n          show: true,\n          name: {\n            offsetY: -20,\n            show: true,\n            color: '#929292',\n            fontSize: '22px'\n          },\n          value: {\n            formatter: function(val) {\n              return \"7654\";\n            },\n            color: '#111',\n            fontSize: '36px',\n            show: true,\n            offsetY: -1\n          }\n        }\n      }\n    },\n    fill: {\n      colors: ['#BC5318'],\n      opacity: 0.9,\n      type: 'solid'},\n    stroke: {\n      lineCap: 'round'\n    },\n    labels: ['VISITS'],\n  }\n};\n\nconst Dashboard = () => (\n  <Container className={styles.Chat}>\n  <h1>Dashboard Page</h1> \n    <Row>\n    \n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>            \n            <Card.Text>\n              <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart options={radial.options} series={radial.series} type=\"radialBar\" height={350} />\n                </Col>\n              \n              </Row>\n              <Row>\n                <Col className='infoData revenue'>\n                  <strong className='tablet'><i class='fa fa-tablet'></i> Tablet</strong>\n                  <span>60%</span>\n                  <span>$ 120,000 MXN</span>\n                </Col>\n                <Col className='text-right infoData revenue'>\n                  <strong className='smartphone'>Smartphone <i class='fa fa-mobile'></i></strong>\n                  <span>40%</span>\n                  <span>$80,000 MXN</span>\n                </Col>\n              </Row>\n            </Card.Text>\n            \n          </Card.Body>\n        </Card>            \n      </Col>\n\n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>            \n            <Card.Text>\n            <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart options={radial2.options} series={radial2.series} type=\"radialBar\" height={350} />\n                </Col>\n                </Row>\n                <Row>\n                <Col className='infoData impresions'>\n                  <strong className='tablet'><i class='fa fa-tablet'></i> Tablet</strong>\n                  <span>60%</span>\n                  <span>$ 120,000 MXN</span>\n                </Col>\n                <Col className='text-right infoData impresions'>\n                  <strong className='smartphone'>Smartphone <i class='fa fa-mobile'></i></strong>\n                  <span>40%</span>\n                  <span>$80,000 MXN</span>\n                </Col>\n              </Row>\n\n            \n            </Card.Text>            \n          </Card.Body>\n        </Card>            \n      </Col>\n\n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>            \n            <Card.Text>\n            <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart options={radial3.options} series={radial3.series} type=\"radialBar\" height={350} />\n                </Col>\n              \n              </Row>\n              <Row>\n                <Col className='infoData visits'>\n                  <strong className='tabletTitle'><i class='fa fa-tablet'></i> Tablet</strong>\n                  <span>60%</span>\n                  <span>$ 120,000 MXN</span>\n                </Col>\n                <Col className='text-right visits'>\n                  <strong className='smartPhoneTitle'>Smartphone <i class='fa fa-mobile'></i></strong>\n                  <span>40%</span>\n                  <span>$80,000 MXN</span>\n                </Col>\n              </Row>\n            </Card.Text>\n            \n          </Card.Body>\n        </Card>            \n      </Col>\n    </Row>\n  </Container>  \n);\n\nDashboard.propTypes = {};\n\nDashboard.defaultProps = {};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport { Container, Row, Col, ListGroup, Media, Form, Button,Collapse, InputGroup, FormControl, Image,Nav, Dropdown} from 'react-bootstrap';\nimport axios from 'axios';\nimport styles from './ChatDetail.module.css';\nimport io from 'socket.io-client';\nimport Picker from 'emoji-picker-react';\nimport Lottie from 'lottie-react-web'\nimport animation from '../../writting.json';\n// Creating references\nlet randomUserNumber = Math.random().toString(36).substring(5);\nlet randomColor = Math.floor(Math.random()*16777215).toString(16);\n\nlet textInput = React.createRef();\nlet username = React.createRef();\n\n\nconst socket = io('http://localhost:8080');\n\nconst ChatDetail = function() {\n\n  \n\n  const [name, setName] = useState(randomUserNumber);  \n  const [state, setState] = useState([{\n    root:true,\n    message:\"Welcome to chat\"\n  }]);\n  const [open, setOpen] = useState(true); \n  const [typing, setTyping] = useState(false); \n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const handleKeyPress = (event) => {  \n    console.log(event.key)  \n    socket.emit('userTyping', { user:name});\n  };\n\n  const onEmojiClick = (event, emojiObject) => {    \n    textInput.current.value+=emojiObject.emoji;\n    setChosenEmoji(emojiObject);\n  };\n\n  \n  socket.on('updateConversation', (data) => {    \n    setState([...state, data.message]);\n  });\n\n  socket.on('updateConversationName', (objName) => {    \n    var newState = state.map(function(conv){\n      if(conv.username===objName.oldName){\n        return conv.username=objName.name\n      }\n    });    \n    setState([...state, {'root':true,'message':objName.oldName+' changed his name to: '+objName.name +'...'}]);\n  });\n\n  socket.on('userTyping', (user) => {    \n       \n    console.log(user);\n    if(user.user!==name)\n      setTyping(true)\n  });\n\n  \n\n  function sendMessage(msg){\n    setTyping(false)\n    socket.emit('userSendMessage', { message: {\"titleColor\":randomColor,\"username\":name,\"message\":msg}});\n    textInput.current.value='';\n  }\nreturn (  \n  <div className={styles.ChatDetail}>  \n  \n  <Container>\n    <Row>\n      <Col>\n        <Button\n            onClick={() => setOpen(!open)}\n            className='pull-right'\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}\n          >\n            Welcome User {name} <i className='fa fa-chevron-down'></i>\n        </Button>      \n      </Col>                 \n    </Row>\n\n    <Row className='nameContainer'>\n      <Collapse in={open}>    \n      <Col>\n      <input className=\"form-control\" placeholder=\"Change name...\" ref={username} />                \n          <button className='btn btn-primary btn-xs' onClick={() => {\n            setName(username.current.value);\n            socket.emit('updateName', { oldName:name,name: username.current.value});\n            username.current.value='';\n            setOpen(!open);\n            \n            }}>Set name</button>     \n      </Col>       \n          \n      </Collapse>  \n    </Row>\n    \n    <Col className='messagesWrapper'>\n    \n          \n    {state.map((value, index) => {\n\n        if(value.root){\n\n        }else{}\n        return <div className={\"speech-bubble animated\" + (value.root ? ' root' : ' ')} key={index}>\n        <Avatar name={value.username} size=\"40\" round={true} />\n          <span className='userName' style={{color:'#'+value.titleColor}}>{value.username}</span> \n          <span className='message'>\n          <i className={'fa fa-moon-o' + (!value.root ? ' invisible' : ' ')} ></i>\n          {value.message}\n          </span>            \n          <Moment fromNow>{value.date}</Moment>   \n        </div>\n      })}         \n      \n           \n    \n            \n      <Form autoComplete=\"off\" inline>      \n      <div className={\"userTyping\" + (typing===false ? ' invisible' : ' ')}>\n      <span className='pull-left'>{name} IS TYPING</span>\n      <Lottie height={40}\n              width={40}\n        \n          options={{\n            animationData: animation,\n            \n          }}\n        />\n      \n      </div>\n        <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\n          Name\n        </Form.Label>\n        <Form.Control\n          className=\"mb-2 mr-sm-2\"\n          id=\"inlineFormInputName2\"\n          placeholder=\"Type message ...\"  \n          onKeyPress={handleKeyPress}\n          ref={textInput}             \n        />\n        <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\n          Username\n        </Form.Label>\n\n        <Dropdown className='emojiContainer'>\n          <Dropdown.Toggle id=\"dropdown-basic\">\n           <i className='fa fa-smile-o'></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#\">\n            <Picker onEmojiClick={onEmojiClick} />\n            </Dropdown.Item>            \n          </Dropdown.Menu>\n        </Dropdown>\n        \n        <Button onClick={() => sendMessage(textInput.current.value)} className=\"mb-2\">\n          Send\n        </Button>\n      </Form> \n    </Col>\n  </Container>   \n  </div>  \n);\n\n}  \n\n\nChatDetail.propTypes = {};\n\nChatDetail.defaultProps = {\n  \n};\n\nexport default ChatDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Main.module.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Landing from \"../Landing/Landing\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport ChatDetail from \"../ChatDetail/ChatDetail\";\n\nconst Main = () => (\n  <div className={styles.Main}>\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route exact path=\"/chat\" component={ChatDetail} />      \n      <Route exact path=\"/dashboard\" component={Dashboard} />\n    </Switch>\n  </div>\n);\n\nMain.propTypes = {};\n\nMain.defaultProps = {};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport moons from '../../moons.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Navbar, Form, Nav, FormControl, Button , Dropdown} from 'react-bootstrap';\nimport styles from './Header.module.css';\n\nconst Header = () => (\n  <div className={styles.Header}>\n  <Navbar fixed=\"top\" bg=\"#fff\" expand=\"lg\">\n  <Container>\n  <Navbar.Brand href=\"/\">\n  <img src={moons} alt='Moons Logo' />\n  </Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\"  />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n  <Nav className=\"mr-auto\">\n  <Nav.Link className={styles.Header}  href=\"/\">Home</Nav.Link>\n  <Nav.Link  className={'link'} href=\"/chat\">Chat</Nav.Link>\n  <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>      \n  </Nav>   \n  </Navbar.Collapse>\n  </Container>\n  </Navbar>    \n  </div>\n);\n\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport ScrollableFeed from 'react-scrollable-feed'\nimport Main from './components/Main/Main';\nimport Header from './components/Header/Header';\nimport { NavLink } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nfunction App() {  \n  return (\n    <ScrollableFeed forceScroll={true}>\n    <div className='moons-wrapper'>    \n      <Header />\n      <Main />      \n      <div id='footer-mobile' className='d-block d-sm-none'>\n      <Nav justify \n                \n        >\n          <Nav.Item>            \n            <NavLink\n            exact              \n              to='/'\n            >\n            <i className=\"fa fa-home\"></i>\n              Home\n            </NavLink>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink                \n                to='/chat'\n              >\n              <i className=\"fa fa-comments\"></i>\n                Chat\n              </NavLink>\n          </Nav.Item>\n          <Nav.Item>            \n            <NavLink                        \n              to='/dashboard'\n            >\n            <i className=\"fa fa-tachometer\"></i>\n              Dashboard\n            </NavLink>\n          </Nav.Item>          \n        </Nav>\n      </div>          \n    </div> \n    </ScrollableFeed>     \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header/Header.module.css","components/Main/Main.module.css","components/Landing/Landing.module.css","components/Dashboard/Dashboard.module.css","components/ChatDetail/ChatDetail.module.css","moons.svg","components/Landing/Landing.js","components/Dashboard/Dashboard.js","components/ChatDetail/ChatDetail.js","components/Main/Main.js","components/Header/Header.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","Landing","Container","className","styles","Row","Col","xs","md","lg","options","animationData","animation","defaultProps","mixed","series","name","type","data","chart","height","stacked","stroke","width","curve","plotOptions","bar","columnWidth","fill","opacity","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","labels","markers","size","xaxis","yaxis","title","text","min","tooltip","shared","intersect","y","formatter","toFixed","chartObj","responsive","breakpoint","undefined","id","categories","radial","toolbar","show","radialBar","startAngle","endAngle","hollow","margin","background","image","imageOffsetX","imageOffsetY","position","dropShadow","enabled","top","left","blur","track","strokeWidth","dataLabels","offsetY","color","fontSize","value","val","parseInt","shadeIntensity","gradientToColors","lineCap","Dashboard","Chat","Card","Body","Title","Text","Button","variant","randomUserNumber","Math","random","toString","substring","randomColor","floor","textInput","React","createRef","username","socket","io","ChatDetail","useState","setName","state","setState","open","setOpen","setChosenEmoji","on","console","log","message","forceScroll","onClick","aria-controls","aria-expanded","Collapse","in","placeholder","ref","current","map","index","key","round","style","titleColor","fromNow","date","Form","autoComplete","inline","Label","htmlFor","srOnly","Control","Dropdown","Toggle","Menu","Item","href","onEmojiClick","event","emojiObject","emoji","msg","emit","Main","exact","path","component","Header","Navbar","fixed","bg","expand","Brand","src","moons","alt","Nav","Link","App","justify","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3ecc3380.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"navbar-nav\":\"Header_navbar-nav__3Gl5W\",\"nav-link\":\"Header_nav-link__pB9ol\",\"link\":\"Header_link__2wI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__CYWXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Landing\":\"Landing_Landing__3WE0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__jFBog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatDetail\":\"ChatDetail_ChatDetail__2aUwi\"};","module.exports = __webpack_public_path__ + \"static/media/moons.e292d61b.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Landing.module.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Lottie from 'lottie-react-web'\nimport animation from '../../welcome.json';\n\nconst Landing = () => (\n  \n    <Container className={styles.Landing}>    \n    <Row>\n    \n      <Col>\n      <h1>About Test</h1> \n      <p>This App contains the followin three routes (components):</p>\n      <ol>\n        <li>/ (Landing component)</li>\n        <li>/chat (Chat component)</li>\n        <li>/dashboard (Dashboard component)</li>\n      </ol>\n      <h3>Client Side:</h3>  \n        <ul>\n            <li>React</li>\n        </ul>\n        <h3>\n          Server Side:\n        </h3> \n        <ul>\n            <li>NodeJs</li>\n            <li>Express</li>\n            <li>Socket IO (Real time communication) </li>\n        </ul>\n\n        <h5>\n          Version Control:\n        </h5> \n        <ul>\n            <li>Git</li>            \n        </ul>\n\n        <h5>\n          Infrastructure:\n        </h5> \n        <ul>\n            <li>Heroku</li>            \n        </ul>\n      </Col>\n      <Col xs={12} md={6} lg={6}>\n      <Lottie\n        \n          options={{\n            animationData: animation,\n            \n          }}\n        />\n      </Col>\n      \n    </Row>\n    <Row>\n      \n      \n      \n    </Row>    \n    <Row>\n      \n      <Col>\n                         \n        \n     \n      </Col>\n    </Row>\n</Container>  \n);\n\nLanding.propTypes = {};\n\nLanding.defaultProps = {};\n\nexport default Landing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col,Card,Button } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport Chart from \"react-apexcharts\";\n\nlet mixed = {\n          \n  series: [{\n    name: 'TEAM A',\n    type: 'column',\n    data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]\n  }, {\n    name: 'TEAM B',\n    type: 'area',\n    data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]\n  }, {\n    name: 'TEAM C',\n    type: 'line',\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]\n  }],\n  options: {\n    chart: {\n      height: 350,\n      type: 'line',\n      stacked: false,\n    },\n    stroke: {\n      width: [0, 2, 5],\n      curve: 'smooth'\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '50%'\n      }\n    },\n    \n    fill: {\n      opacity: [0.85, 0.25, 1],\n      gradient: {\n        inverseColors: false,\n        shade: 'light',\n        type: \"vertical\",\n        opacityFrom: 0.85,\n        opacityTo: 0.55,\n        stops: [0, 100, 100, 100]\n      }\n    },\n    labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003',\n      '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003'\n    ],\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    yaxis: {\n      title: {\n        text: 'Points',\n      },\n      min: 0\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== \"undefined\") {\n            return y.toFixed(0) + \" points\";\n          }\n          return y;\n    \n        }\n      }\n    }\n  },\n\n\n};\n\nlet chartObj = {\n  options: {\n    responsive: [{\n      breakpoint: undefined,\n      options: {},\n  }],\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n    }\n  },\n  series: [\n    {\n      name: \"series-1\",\n      data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }\n  ]\n};\n\nlet radial = {         \n  series: [75],\n  options: {\n    chart: {\n      height: 350,\n      type: 'radialBar',\n      toolbar: {\n        show: true\n      }\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -135,\n        endAngle: 225,\n         hollow: {\n          margin: 0,\n          size: '70%',\n          background: '#fff',\n          image: undefined,\n          imageOffsetX: 0,\n          imageOffsetY: 0,\n          position: 'front',\n          dropShadow: {\n            enabled: true,\n            top: 3,\n            left: 0,\n            blur: 4,\n            opacity: 0.24\n          }\n        },\n        track: {\n          background: '#fff',\n          strokeWidth: '67%',\n          margin: 0, // margin is in pixels\n          dropShadow: {\n            enabled: true,\n            top: -3,\n            left: 0,\n            blur: 4,\n            opacity: 0.35\n          }\n        },\n    \n        dataLabels: {\n          show: true,\n          name: {\n            offsetY: -10,\n            show: true,\n            color: '#888',\n            fontSize: '17px'\n          },\n          value: {\n            formatter: function(val) {\n              return parseInt(val);\n            },\n            color: '#111',\n            fontSize: '36px',\n            show: true,\n          }\n        }\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'horizontal',\n        shadeIntensity: 0.5,\n        gradientToColors: ['#ABE5A1'],\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100]\n      }\n    },\n    stroke: {\n      lineCap: 'round'\n    },\n    labels: ['Percent'],\n  }\n};\n\nconst Dashboard = () => (\n  <Container className={styles.Chat}>\n  <h1>Dashboard Page</h1> \n    <Row>\n    \n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>\n            <Card.Title>Revenue</Card.Title>\n            <Card.Text>\n              <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart\n                  options={chartObj.options}\n                  series={chartObj.series}\n                  type=\"bar\"              \n                />\n                </Col>\n              \n              </Row>\n            \n            </Card.Text>\n            <Button variant=\"primary\">Go somewhere</Button>\n          </Card.Body>\n        </Card>            \n      </Col>\n\n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>\n            <Card.Title>Impresions</Card.Title>\n            <Card.Text>\n            <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart options={radial.options} series={radial.series} type=\"radialBar\" height={350} />\n                </Col>\n                </Row>\n\n            \n            </Card.Text>\n            <Button variant=\"primary\">Go somewhere</Button>\n          </Card.Body>\n        </Card>            \n      </Col>\n\n      <Col xs={12} md={4} lg={4} className='mb-2'>\n        <Card>  \n          <Card.Body>\n            <Card.Title>Visits</Card.Title>\n            <Card.Text>\n            <Row>\n                <Col xs={12} md={12} lg={12}>\n                <Chart\n                  options={mixed.options}\n                  series={mixed.series}\n                  type=\"line\"              \n                />\n                </Col>\n              \n              </Row>\n            </Card.Text>\n            <Button variant=\"primary\">Go somewhere</Button>\n          </Card.Body>\n        </Card>            \n      </Col>\n    </Row>\n  </Container>  \n);\n\nDashboard.propTypes = {};\n\nDashboard.defaultProps = {};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport ScrollableFeed from 'react-scrollable-feed'\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport { Container, Row, Col, ListGroup, Media, Form, Button,Collapse, InputGroup, FormControl, Image,Nav, Dropdown} from 'react-bootstrap';\nimport axios from 'axios';\nimport styles from './ChatDetail.module.css';\nimport io from 'socket.io-client';\nimport Picker from 'emoji-picker-react';\n// Creating references\nlet randomUserNumber = Math.random().toString(36).substring(5);\nlet randomColor = Math.floor(Math.random()*16777215).toString(16);\n\nlet textInput = React.createRef();\nlet username = React.createRef();\n\n\nconst socket = io('http://localhost:8080');\n\n\nconst ChatDetail = function() {\n  const [name, setName] = useState(randomUserNumber);  \n  const [state, setState] = useState([]);\n  const [open, setOpen] = useState(true); \n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const onEmojiClick = (event, emojiObject) => {\n    console.log(emojiObject)\n    textInput.current.value+=emojiObject.emoji;\n    setChosenEmoji(emojiObject);\n  };\n\n  \n  socket.on('updateConversation', (data) => {\n    console.log(data);   \n    console.log(...state) ;\n    setState([...state, data.message]);\n  });\n\n  \n\n  function sendMessage(msg){\n    console.log(msg);\n\n    socket.emit('userSendMessage', { message: {\"titleColor\":randomColor,\"username\":name,\"message\":msg}});\n\n  /*axios.post(uri+'/message', { message: {\"titleColor\":randomColor,\"username\":name,\"message\":msg}})\n      .then(res => {        \n        console.log(res.data);\n      });*/\n\n    \n    textInput.current.value='';\n  }\nreturn (  \n  <div className={styles.ChatDetail}>  \n  <ScrollableFeed forceScroll='true'>\n  <Container>\n    <Row>\n      <Col>\n        <Button\n            onClick={() => setOpen(!open)}\n            className='pull-right'\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}\n          >\n            Welcome User {name} <i className='fa fa-chevron-down'></i>\n        </Button>      \n      </Col>                 \n    </Row>\n\n    <Row className='nameContainer'>\n      <Collapse in={open}>    \n      <Col>\n      <input className=\"form-control\" placeholder=\"Change name...\" ref={username} />                \n          <button className='btn btn-primary btn-xs' onClick={() => {setName(username.current.value);username.current.value='';setOpen(!open)}}>Set name</button>     \n      </Col>       \n          \n      </Collapse>  \n    </Row>\n    \n    <Col className='messagesWrapper'>\n    \n          \n    {state.map((value, index) => {\n        return <div className=\"speech-bubble animated\" key={index}>\n        <Avatar name={value.username} size=\"40\" round={true} />\n          <span className='userName' style={{color:'#'+value.titleColor}}>{value.username}</span> \n          <span className='message'>{value.message}</span>            \n          <Moment fromNow>{value.date}</Moment>   \n        </div>\n      })}         \n      \n           \n    \n            \n      <Form autoComplete=\"off\" inline>\n        <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\n          Name\n        </Form.Label>\n        <Form.Control\n          className=\"mb-2 mr-sm-2\"\n          id=\"inlineFormInputName2\"\n          placeholder=\"Type message ...\"  \n          ref={textInput}             \n        />\n        <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\n          Username\n        </Form.Label>\n\n        <Dropdown className='emojiContainer'>\n          <Dropdown.Toggle id=\"dropdown-basic\">\n           <i className='fa fa-smile-o'></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#\">\n            <Picker onEmojiClick={onEmojiClick} />\n            </Dropdown.Item>            \n          </Dropdown.Menu>\n        </Dropdown>\n        \n        <Button onClick={() => sendMessage(textInput.current.value)} className=\"mb-2\">\n          Send\n        </Button>\n      </Form> \n    </Col>\n  </Container>\n  </ScrollableFeed>   \n  </div>  \n);\n\n}  \n\n\nChatDetail.propTypes = {};\n\nChatDetail.defaultProps = {\n  \n};\n\nexport default ChatDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Main.module.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Landing from \"../Landing/Landing\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport ChatDetail from \"../ChatDetail/ChatDetail\";\n\nconst Main = () => (\n  <div className={styles.Main}>\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route exact path=\"/chat\" component={ChatDetail} />      \n      <Route exact path=\"/dashboard\" component={Dashboard} />\n    </Switch>\n  </div>\n);\n\nMain.propTypes = {};\n\nMain.defaultProps = {};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport moons from '../../moons.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Navbar, Form, Nav, FormControl, Button , Dropdown} from 'react-bootstrap';\nimport styles from './Header.module.css';\n\nconst Header = () => (\n  <div className={styles.Header}>\n  <Navbar fixed=\"top\" bg=\"#fff\" expand=\"lg\">\n  <Container>\n  <Navbar.Brand href=\"/\">\n  <img src={moons} alt='Moons Logo' />\n  </Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\"  />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n  <Nav className=\"mr-auto\">\n  <Nav.Link className={styles.Header}  href=\"/\">Home</Nav.Link>\n  <Nav.Link  className={'link'} href=\"/chat\">Chat</Nav.Link>\n  <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>      \n  </Nav>   \n  </Navbar.Collapse>\n  </Container>\n  </Navbar>    \n  </div>\n);\n\nHeader.propTypes = {};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport Main from './components/Main/Main';\nimport Header from './components/Header/Header';\nimport { NavLink } from \"react-router-dom\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nfunction App() {  \n  return (\n    <div className='moons-wrapper'>    \n      <Header />\n      <Main />      \n      <div id='footer-mobile' className='d-block d-sm-none'>\n      <Nav justify \n                \n        >\n          <Nav.Item>            \n            <NavLink\n            exact              \n              to='/'\n            >\n            <i className=\"fa fa-home\"></i>\n              Home\n            </NavLink>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink                \n                to='/chat'\n              >\n              <i className=\"fa fa-comments\"></i>\n                Chat\n              </NavLink>\n          </Nav.Item>\n          <Nav.Item>            \n            <NavLink                        \n              to='/dashboard'\n            >\n            <i className=\"fa fa-tachometer\"></i>\n              Dashboard\n            </NavLink>\n          </Nav.Item>          \n        </Nav>\n      </div>          \n    </div>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}